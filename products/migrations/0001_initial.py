# Generated by Django 3.2.9 on 2021-11-18 12:13

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('stakeholders', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Allergen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=80, verbose_name='Nombre')),
                ('emoji', models.CharField(blank=True, default='', max_length=10, verbose_name='Nombre')),
            ],
        ),
        migrations.CreateModel(
            name='ConcreteIngredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, default='', max_length=300, verbose_name='Descripción')),
                ('reference', models.CharField(default='', max_length=30, verbose_name='Referencia producto *')),
                ('measuring_unit', models.CharField(choices=[('kg', 'Kilogramo'), ('l', 'Litro'), ('ud', 'Unidad')], default='kg', max_length=5, verbose_name='Unidad de medida')),
                ('pack_units', models.DecimalField(blank=True, decimal_places=2, default='1', max_digits=7, verbose_name=' Formato (kg,litro o uds. por paquete) *')),
                ('price_pack', models.DecimalField(blank=True, decimal_places=2, max_digits=7, verbose_name='Precio (sin IVA)*')),
                ('price_unit', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=7, verbose_name='Precio por unidad de medida')),
                ('active_flag', models.BooleanField(default=True, verbose_name='Activo')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Creado')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modificado')),
                ('allergens', models.ManyToManyField(blank=True, max_length=80, to='products.Allergen', verbose_name='Alérgenos y dietas especiales *')),
            ],
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80, verbose_name='Nombre')),
                ('description', models.CharField(blank=True, default='', max_length=300, verbose_name='Descripción')),
                ('kcal', models.IntegerField(blank=True, verbose_name='Calorías (kcal/100g)')),
                ('ingredient_type', models.CharField(choices=[('fruit', 'Fruta'), ('vegetable', 'Verduras'), ('cereal', 'Cereales'), ('legume', 'Legumbres'), ('dried_fruit', 'Frutos secos'), ('meat', 'Carnes'), ('fish', 'Pescados y mariscos'), ('lactic', 'Lácticos'), ('eggs', 'Huevo y derivados'), ('species', 'Especias y condimentos'), ('infusions', 'Infusiones'), ('oils', 'Aceites y grasas vegetales'), ('water', 'Agua'), ('others', 'Otros')], max_length=30, verbose_name='Tipo de ingrediente')),
                ('conservation_method', models.CharField(choices=[('storage', 'Almacén'), ('nevera', 'Nevera'), ('freezer', 'Congelador')], default='No definido', max_length=30, verbose_name='Conservación')),
                ('lifetime', models.IntegerField(blank=True, verbose_name='Vida útil (días)')),
                ('active_flag', models.BooleanField(default=True, verbose_name='Activo')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Creado')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modificado')),
            ],
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80, verbose_name='Nombre *')),
                ('description', models.CharField(blank=True, default='', max_length=300, verbose_name='Descripción')),
                ('recipe_type', models.CharField(choices=[('drink', 'Bebidas'), ('hot_drink', 'Bebidas calientes'), ('snacks', 'Snacks y entrantes'), ('main', 'Principales'), ('sauces', 'Salsas'), ('desserts', 'Postres y dulces')], default='', max_length=30, verbose_name='Referencia producto *')),
                ('min_servings', models.IntegerField(default=1, verbose_name='Raciones mínimas *')),
                ('preparation_time', models.IntegerField(blank=True, verbose_name='Tiempo de preparación (min)')),
                ('ingredient_cost', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=7, verbose_name='Coste ingredientes por ración (€)')),
                ('resource_cost', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=7, verbose_name='Coste recursos por ración (€) *')),
                ('total_cost', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=7, verbose_name='Coste total por ración (€)')),
                ('active_flag', models.BooleanField(default=True, verbose_name='Activo')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Creado')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modificado')),
            ],
        ),
        migrations.CreateModel(
            name='ConcreteIngredientInRecipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ammout_per_serving', models.DecimalField(blank=True, decimal_places=2, default='0', max_digits=7, verbose_name='Cantidad por ración (kg,litro o uds.) *')),
                ('cost_per_serving', models.DecimalField(blank=True, decimal_places=2, default='0', max_digits=7, verbose_name='Coste por ración (€)')),
                ('concrete_ingredient', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='products.concreteingredient', verbose_name='Ingrediente *')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.recipe', verbose_name='Receta')),
            ],
        ),
        migrations.AddField(
            model_name='concreteingredient',
            name='ingredient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.ingredient', verbose_name='Ingrediente'),
        ),
        migrations.AddField(
            model_name='concreteingredient',
            name='provider',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='stakeholders.provider', verbose_name='Proveedor *'),
        ),
    ]
